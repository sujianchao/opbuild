#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build OpenWrtAr71xx

on:
#  release:
#    types: [published]
#  push:
#    branches:
#      - master
#    paths:
#      - 'x64.sh'
  schedule:
    - cron: 0 1 * * 6
#  watch:
#    types: [started]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: ar71xx.config
  DIY_SH: ar71xx.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: true
  GITHUB_REPO: jsda/opbuild
  Targets_TAG: wdr3500
  ARCH_TAG: ar71xx
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "Deleting files, please wait ..."
        sudo rm -rf /usr/share/dotnet
        docker rmi `docker images -q`
        sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq autoremove --purge
        sudo swapoff /swapfile
        sudo rm -f /swapfile  /etc/apt/sources.list.d/*
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install apt-utils debconf cvs build-essential asciidoc binutils \
          bzip2 gawk gettext git libncurses5-dev patch libz-dev unzip zlib1g-dev ccache \
          g++ bison flex autoconf automake autopoint make gcc subversion libtool sphinx-common \
          mercurial sharutils ncurses-term git-core texinfo curl pkg-config xmlto libpcre3-dev \
          libc-ares-dev libglib2.0-dev libgsasl7 libntlm0 libssl-dev libssl-doc libv8-dev \
          msmtp nodejs p7zip p7zip-full gcc-multilib wget nano lib32gcc1 expat libexpat1-dev \
          uglifyjs qemu-utils doxygen gettext bash zip bc fastjar util-linux libgtk2.0-dev \
          intltool genisoimage python3-dev python3-pip rsync ruby xsltproc libboost-dev \
          libboost-tools-dev libxml-parser-perl libusb-dev bcc bzr ecj openjdk-11-jdk \
          quilt openssl libssh2-1-dev libgnutls28-dev nettle-dev libgmp-dev libsqlite3-dev \
          sqlite3 libgpg-error-dev libxml2-dev autotools-dev dpkg-dev gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 \
          lzip libcppunit-dev libcurl4-openssl-dev libevent-dev ca-certificates libc6-dev-i386 \
          bin86 g++-multilib lib32z1-dev libz3-dev libgcrypt20-dev binutils-avr mt-st docutils-common \
          manpages-dev libunistring-dev libelf-dev device-tree-compiler upx golang antlr3 gperf
        sudo -E apt-get -qq clean

    - name: Clone source code
      run: sudo mkdir -p /op/ && sudo chown -R runner:runner /op/ && git clone --depth 1 $REPO_URL -b $REPO_BRANCH /op/openwrt

    - name: Update feeds
      run: cd /op/openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd /op/openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        cp -rf ./* /op/
        cd /op/
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        [ -e $DIY_SH ] && mv $DIY_SH openwrt/$DIY_SH
        cd openwrt
        chmod +x $DIY_SH
        ./$DIY_SH
        make defconfig

    - name: SSH connection to Actions
      uses: jsda/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Download package
      run: |
        cd /op/openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd /op/openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        rm -rf bin/targets/*/*/packages

    - name: Organize files
      id: organize
      if: success()
      run: |
        echo "======================="
        echo "Space usage:"
        echo "======================="
        echo "$(df -h)"
        echo "======================="
        echo "$(ls -fl /op/openwrt/bin/targets/*/*/*)"
        echo "======================="
        echo "::set-env name=DATE::$(date "+%Y%m%d-%H%M")"

    - name: Upload Packages
      id: upload_packages
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        cd /op/openwrt/bin/packages/*/base
        git init
        git config user.name "actions"
        git config user.email "actions@github.com"
        git add .
        git commit -m "$DATE-$ARCH_TAG"
        git push --force --quiet "https://$GITHUB_TOKEN@github.com/$GITHUB_REPO.git" HEAD:packages/$ARCH_TAG

    - name: Upload Targets
      id: upload_targets
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        cd /op/openwrt/bin/targets/*/*
        git init
        git config user.name "actions"
        git config user.email "actions@github.com"
        git add .
        git commit -m "$DATE-$Targets_TAG"
        git push --force --quiet "https://$GITHUB_TOKEN@github.com/$GITHUB_REPO.git" HEAD:targets/$Targets_TAG
